{"version":3,"sources":["components/Message.jsx","components/Chat.jsx","components/Time.jsx","App.js","index.js"],"names":["Message","props","state","text","value","output","iterator","that","this","msg","split","timeout","ms","Promise","resolve","setTimeout","draw","a","setState","className","React","Component","Chat","onSwipe","console","log","chatClassname","swipe","rows","onChange","handler","txt","onKeyUp","e","key","btn","keyIdentifier","keyCode","onClick","id","ref","inputRef","messages","map","index","Time","time","Date","toLocaleTimeString","interval","setInterval","clearInterval","App","swipeStart","view","target","clientX","onMouseDown","mouseDown","bind","onMouseUp","mouseUp","onEditMessage","onSendMessage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.feee04e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Message extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: props.value,\r\n            output: '',\r\n            iterator: 0\r\n        }  \r\n    }\r\n\r\n    componentDidMount(){\r\n        let that = this;\r\n        let msg = this.state.text.split('');\r\n        function timeout(ms) {\r\n            return new Promise(resolve => setTimeout(resolve, ms));\r\n        }\r\n        async function draw(ms) {\r\n            await timeout(ms);\r\n            that.setState((state) => {\r\n                let value = msg[that.state.iterator]\r\n                return {output: state.output + value, iterator: state.iterator + 1}\r\n            });\r\n            if(that.state.text !== that.state.output) draw(50 - that.state.iterator);\r\n        }\r\n        draw(250);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chat-message-wrapper'>\r\n                <div className='chat-message'>{this.state.output}</div>\r\n            </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport Message from './Message'\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onSwipe = function(){\r\n        console.log(this)\r\n        this.setState({chatClassname: 'hide-chat'});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'chat-wrapper ' +  this.props.swipe } >\r\n                <div className=\"chat\">\r\n                    <div className='input-wrapper'>\r\n                        <textarea \r\n                            rows = \"5\"\r\n                            onChange = {this.props.handler.txt}\r\n                            value = {this.props.text}\r\n                            onKeyUp={(e)=>{\r\n                                if (e.key === 'Enter') {\r\n                                    console.log(this)\r\n                                    this.props.handler.btn();\r\n                                } else if (e.keyIdentifier === 'Enter') {\r\n                                    this.props.handler.btn();\r\n                                } else if (e.keyCode === 13) {\r\n                                    this.props.handler.btn();\r\n                                }\r\n                            }}>\r\n                        </textarea>\r\n                        <button\r\n                            onClick={this.props.handler.btn}\r\n                        >Send</button>\r\n                    </div>\r\n                    <div className='chat-messages' id='chat' ref={(inputRef)=>this.inputRef = inputRef}>\r\n                            { this.props.messages.map(function(value, index){\r\n                                return (\r\n                                    <Message key={index} value={value}/>\r\n                                )\r\n                            })}\r\n                    </div>\r\n                </div>\r\n             </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: new Date().toLocaleTimeString()\r\n        }  \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            this.setState({time: new Date().toLocaleTimeString()});\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'time ' + this.props.swipe}>\r\n                <div className='time-wrapper'>\r\n                    {this.state.time}\r\n                </div>        \r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nexport default Time;","import React from 'react';\nimport Chat from './components/Chat';\nimport Time from './components/Time';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      swipe: '',\n      swipeStart: '',\n      view: true,\n      text: '',\n      messages: ['Hello!']\n    }\n  }\n\n  onEditMessage(e) {\n    this.setState({text: e.target.value});\n  }\n\n  onSendMessage() {\n    if(!this.state.text) return;\n    this.setState(function(state){\n      return {messages: [...state.messages, state.text], text: ''}\n    });\n  }\n\n  onSwipe() {\n    !this.state.swipe ? this.setState({swipe: 'swipe'}) : this.setState({swipe: ''});\n  }\n\n  mouseDown(e) {\n    this.setState({swipeStart: e.clientX});\n  }\n\n  mouseUp(e) {\n    if(this.state.view) {\n      if( (this.state.swipeStart - e.clientX) > 50 ) this.onSwipe();\n      this.setState({view: false});\n    } else {\n      if( (e.clientX - this.state.swipeStart) > 50 ) this.onSwipe();\n      this.setState({view: true});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\"\n        onMouseDown={this.mouseDown.bind(this)}\n        onMouseUp={this.mouseUp.bind(this)}>\n        <Chat \n          {...this.state}\n          handler={{\n            swipe: this.onSwipe.bind(this),\n            txt: this.onEditMessage.bind(this),\n            btn: this.onSendMessage.bind(this)\n          }}\n        />\n        <Time {...this.state} />\n      </div>\n    );\n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}